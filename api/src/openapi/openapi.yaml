openapi: '3.0.0'

info:
  description: API for managing agenda contacts.
  version: '1.0'
  title: Agenda API

servers:
  - url: http://agenda.hackfromhome.hackersatupc.org/api
    description: Production endpoint.
  - url: http://localhost:8090/api
    description: Development endpoint.

tags:
  - name: contacts
    description: endpoint for managing contacts.

paths:
  /contacts:
    get:
      tags:
        - contacts
      summary: Retrieves all the contacts or a certain one given its identifier.
      description: Invoke this endpoint to retrieve all the contacts or a certain one given its identifier.
      operationId: src.api.contacts.get
      parameters:
        - name: contact_id
          in: query
          description: Contact identifer.
          required: false
          schema:
            type: string
      responses:
        200:
          description: Contact details. You should check the `error` attribute to determine if there was an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
        default:
          description: Unexpected error.
          content:
            application/text:
              schema:
                type: string
                description: Error description.

    post:
      tags:
        - contacts
      summary: Adds a new contact given its information.
      description: Invoke this endpoint to add a new contact given its information.
      operationId: src.api.contacts.post
      requestBody:
        required: true
        description: Body wrapper for the request.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactData'
      responses:
        201:
          description: Contact created. You should check the `error` attribute to determine if there was an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
        default:
          description: Unexpected error.
          content:
            application/text:
              schema:
                type: string
                description: Error description.

    put:
      tags:
        - contacts
      summary: Modifies a existing contact given its new information.
      description: Invoke this endpoint to modifiy a existing contact given its new information.
      operationId: src.api.contacts.put
      parameters:
        - name: contact_id
          in: query
          description: Contact identifer.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        description: Body wrapper for the request.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactData'
      responses:
        201:
          description: Contact modified. You should check the `error` attribute to determine if there was an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
        204:
          description: Contact given not found. You should check the `error` attribute to determine if there was an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
        default:
          description: Unexpected error.
          content:
            application/text:
              schema:
                type: string
                description: Error description.

    delete:
      tags:
        - contacts
      summary: Deletes a certain contact given its identifier.
      description: Invoke this endpoint to delete a certain contact given its identifier.
      operationId: src.api.contacts.delete
      parameters:
        - name: contact_id
          in: query
          description: Contact identifer.
          required: true
          schema:
            type: string
      responses:
        204:
          description: Contact deleted. You should check the `error` attribute to determine if there was an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
        default:
          description: Unexpected error.
          content:
            application/text:
              schema:
                type: string
                description: Error description.

components:
  schemas:

    ContactData:
      type: object
      properties:
        name:
          type: string
          description: Contact name.
        last_name:
          type: string
          description: Contact last name.
        image_url:
          type: string
          description: An Internet-accessible Image URL to represent the contact.
        address:
          type: string
          description: Contact postal address.
        phone_number:
          type: string
          description: Contact phone number.
        email:
          type: string
          description: Contact email address.

    ContactId:
      properties:
        id:
          type: integer
          description: Contact identifier.

    APIResponseGet:
      allOf:
        - $ref: '#/components/schemas/ContactData'
        - $ref: '#/components/schemas/ContactId'

    APIResponsePost:
      oneOf:
        - $ref: '#/components/schemas/ContactId'

    APIResponsePut:
      properties:
        message:
          type: string
          description: Message confirming action done.

    APIResponseDelete:
      properties:
        message:
          type: string
          description: Message confirming action done.

    APIResponse:
      type: object
      properties:
        error:
          type: boolean
          description: Whether or not the request was successfully processed or not.
        message:
          type: string
          description: Error message if the request was unsuccessful.
        response:
          type: object
          description: Contains the response data if the request was successful.
          oneOf:
            - $ref: '#/components/schemas/APIResponseGet'
            - $ref: '#/components/schemas/APIResponsePost'
            - $ref: '#/components/schemas/APIResponsePut'
            - $ref: '#/components/schemas/APIResponseDelete'
